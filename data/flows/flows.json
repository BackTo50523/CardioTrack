[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e28e5f86be6f0835",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "fb60a767374c0b66",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Patient ID:",
        "format": "{{msg.payload.patient}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 250,
        "y": 620,
        "wires": []
    },
    {
        "id": "59a701188d7538ba",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "STD",
        "group": "fb60a767374c0b66",
        "order": 12,
        "width": 8,
        "height": 6,
        "label": "Standard Deviation R-R (ms)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1510,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "79a609435f17ad7c",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "SATURATION",
        "group": "fb60a767374c0b66",
        "order": 11,
        "width": 8,
        "height": 6,
        "label": "Saturation (%)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "70",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff4242",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1540,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "8ac118683ea11e08",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "BLOODPRESSURE",
        "group": "fb60a767374c0b66",
        "order": 10,
        "width": 8,
        "height": 6,
        "label": "Blood Pressure (mmHg)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#d62728",
            "#f4f73b",
            "#d62728",
            "#f4f73b",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1560,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d0f1dcf60f996d61",
        "type": "ui_chart",
        "z": "f6f2187d.f17ca8",
        "name": "HEARTRATE",
        "group": "fb60a767374c0b66",
        "order": 13,
        "width": 8,
        "height": 7,
        "label": "Heart rate (bpm)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#d62728",
            "#f4f73b",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1540,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ab3dc96f3a4e092e",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "url": "/dashboard",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 780,
        "wires": [
            [
                "f833c2c798c4490d",
                "e28e5f86be6f0835",
                "c14e5d4da4d43ac4",
                "5c48ecedb89250e8"
            ]
        ]
    },
    {
        "id": "fe4731819ed9607d",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 640,
        "wires": []
    },
    {
        "id": "1644c0c9861b678e",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 780,
        "wires": [
            [
                "ca39e4406eb9ac9a",
                "fe4731819ed9607d"
            ]
        ]
    },
    {
        "id": "ca39e4406eb9ac9a",
        "type": "python3-function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "msg1 = {}\nmsg2 = {}\nmsg3 = {}\nmsg4 = {}\n\nsaturation = []\nthreshold1 = []\nbps = []\nbpd = []\nthresholdsmax = []\nthresholdsmin = []\nthresholddmax = []\nthresholddmin = []\nhr = []\nthreshold2 = []\nstdrr = []\nthreshold3 = []\n\narray = msg[\"payload\"]\nfor item in array:\n    if item[\"iox::measurement\"] == 'BS':\n        dato = {\"x\":item[\"time\"],\"y\":item[\"bs\"]}\n        threshold = {\"x\":item[\"time\"],\"y\":92}\n        threshold1.append(threshold)\n        saturation.append(dato)\n    elif item[\"iox::measurement\"] == 'BP':\n        dato_s = {\"x\":item[\"time\"],\"y\":item[\"bp_systolic\"]}\n        dato_d = {\"x\":item[\"time\"],\"y\":item[\"bp_diastolic\"]}\n        thresholdmaxs = {\"x\":item[\"time\"],\"y\":140}\n        thresholdmins = {\"x\":item[\"time\"],\"y\":115}\n        thresholdmaxd = {\"x\":item[\"time\"],\"y\":95}\n        thresholdmind = {\"x\":item[\"time\"],\"y\":65}\n        thresholdsmax.append(thresholdmaxs)\n        thresholdsmin.append(thresholdmins)\n        thresholddmax.append(thresholdmaxd)\n        thresholddmin.append(thresholdmind)\n        bps.append(dato_s)\n        bpd.append(dato_d)\n        \n    elif item[\"iox::measurement\"] == 'ECG':\n        datohr = {\"x\":item[\"time\"],\"y\":item[\"hr\"]}\n        thresholdmax = {\"x\":item[\"time\"],\"y\":110}\n        thresholdmin = {\"x\":item[\"time\"],\"y\":60}\n        datostd = {\"x\":item[\"time\"],\"y\":item[\"stdrr\"]}\n        if datohr[\"y\"] is not None:\n            threshold2.append(thresholdmax)\n            threshold3.append(thresholdmin)\n            hr.append(datohr)\n        if datostd[\"y\"] is not None:\n            stdrr.append(datostd)\n \n\nmsg1[\"payload\"] = [{\n\"series\": [\"Saturation\",\"Threshold\"],\n\"data\": [saturation,threshold1],\n\"labels\":[\"\"]\n}]    \n\nmsg2[\"payload\"] = [{\n\"series\": [\"Systolic Pressure\", \"Diastolic Pressure\", \"Threshold_max_systolic\", \"Threshold_min_systolic\", \"Threshold_max_diastolic\", \"Threshold_min_diastolic\"],\n\"data\": [bps,bpd, thresholdsmax, thresholdsmin, thresholddmax, thresholddmin],\n\"labels\":[\"\"]\n}]  \n\nmsg3[\"payload\"] = [{\n\"series\": [\"Heart Rate\",\"Threshold max\",\"Threshold min\"],\n\"data\": [hr,threshold2,threshold3],\n\"labels\":[\"\"]\n}] \n\nmsg4[\"payload\"] = [{\n\"series\": [\"STD RR\"],\n\"data\": [stdrr],\n\"labels\":[\"\"]\n}] \n\nreturn [msg1,msg2,msg3,msg4]\n\n\n",
        "outputs": 4,
        "x": 1170,
        "y": 780,
        "wires": [
            [
                "79a609435f17ad7c"
            ],
            [
                "8ac118683ea11e08"
            ],
            [
                "d0f1dcf60f996d61"
            ],
            [
                "59a701188d7538ba"
            ]
        ]
    },
    {
        "id": "7316b57737cff3f8",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "statusCode": "301",
        "headers": {
            "location": "/ui"
        },
        "x": 400,
        "y": 900,
        "wires": []
    },
    {
        "id": "c14e5d4da4d43ac4",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "no cache",
        "func": "msg.headers = {\n    \"Cache-Control\": \"no-cache, no-store, must-revalidate\",  // Impedisce la cache\n    \"Pragma\": \"no-cache\",  // Impedisce la cache per i browser pi√π vecchi\n    \"Expires\": \"0\",  // Impedisce la cache\n    \"Set-Cookie\": \"JSESSIONID=; Max-Age=0; Path=/\"  // Elimina il cookie di sessione\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 900,
        "wires": [
            [
                "7316b57737cff3f8"
            ]
        ]
    },
    {
        "id": "b1367467db307354",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "8e5c65aa383208af"
            ]
        ]
    },
    {
        "id": "8e5c65aa383208af",
        "type": "python3-function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "import json\n\nconf = {\n    \"catalog\":\"http://localhost:8080/catalog/\",\n    \"serviceInfo\":{\n        \"serviceID\": 6,\n        \"serviceName\": \"Dashboard\",\n        \"availableServices\": [\n            \"REST\"\n        ],\n        \"serviceDetails\": [\n            {\n                \"serviceType\": \"REST\",\n                \"serviceIP\": \"localhost\",\n                \"servicePort\": 1880\n            }\n        ],\n    \"timestamp\": 1234567890\n    }\n}\n\nmsg[\"url\"] = conf[\"catalog\"] + \"updateService\"\nmsg[\"payload\"] = json.dumps(conf[\"serviceInfo\"])\n\nreturn msg",
        "outputs": 1,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "e9fe444167eb6032"
            ]
        ]
    },
    {
        "id": "e9fe444167eb6032",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "PUT",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 400,
        "wires": [
            [
                "bd501666042d3317",
                "fdd01702c01ed880"
            ]
        ]
    },
    {
        "id": "fdd01702c01ed880",
        "type": "switch",
        "z": "f6f2187d.f17ca8",
        "name": "IF STATUSCODE == 404",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "404",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "6ba121150670dad7"
            ]
        ]
    },
    {
        "id": "7c25afb65b0385ec",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "POST",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "d575bc4ecd80dd8d"
            ]
        ]
    },
    {
        "id": "bd501666042d3317",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "statusCode",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "d575bc4ecd80dd8d",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 300,
        "wires": []
    },
    {
        "id": "6ba121150670dad7",
        "type": "python3-function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "import json\n\nconf = {\n    \"catalog\":\"http://localhost:8080/catalog/\",\n    \"serviceInfo\":{\n        \"serviceID\": 6,\n        \"serviceName\": \"Dashboard\",\n        \"availableServices\": [\n            \"REST\"\n        ],\n        \"serviceDetails\": [\n            {\n                \"serviceType\": \"REST\",\n                \"serviceIP\": \"localhost\",\n                \"servicePort\": 1880\n            }\n        ],\n    \"timestamp\": 1234567890\n    }\n}\n\nmsg[\"url\"] = conf[\"catalog\"] + \"registerService\"\nmsg[\"payload\"] = json.dumps(conf[\"serviceInfo\"])\nreturn msg",
        "outputs": 1,
        "x": 1110,
        "y": 400,
        "wires": [
            [
                "7c25afb65b0385ec"
            ]
        ]
    },
    {
        "id": "d5986aca5622ea6b",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 780,
        "wires": [
            [
                "aa5ee07d38b53fb6",
                "bfaf0ebcba84160c"
            ]
        ]
    },
    {
        "id": "5c48ecedb89250e8",
        "type": "python3-function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "conf = {\n    \"catalog\":\"http://localhost:8080/catalog/\",\n    \"serviceInfo\":{\n        \"serviceID\": 6,\n        \"serviceName\": \"Dashboard\",\n        \"availableServices\": [\n            \"REST\"\n        ],\n        \"serviceDetails\": [\n            {\n                \"serviceType\": \"REST\",\n                \"serviceIP\": \"localhost\",\n                \"servicePort\": 1880\n            }\n        ],\n    \"timestamp\": 1234567890\n    }\n}\n\nmsg[\"url\"] = conf[\"catalog\"] + \"searchByService?ID=4\"\n\nreturn msg",
        "outputs": 1,
        "x": 310,
        "y": 780,
        "wires": [
            [
                "d5986aca5622ea6b"
            ]
        ]
    },
    {
        "id": "f833c2c798c4490d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "patientID",
        "func": "var patientID = msg[\"payload\"]\nglobal.set(\"patientID\", patientID);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "bfaf0ebcba84160c",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 1",
        "func": "\nlet time_start = (Math.floor(Date.now() / 1000) - 300) * 1000000000;  // 5 minuti prima\nlet time_end = Math.floor(Date.now() / 1000) * 1000000000;  // Ora attuale in secondi\n\nlet servicedetails = msg.payload.serviceDetails\nlet host = servicedetails[0].serviceIP; \nlet port = servicedetails[0].servicePort; \nvar patientID = global.get(\"patientID\")\nvar url_base = host + \":\" + port + \"/database/\" + patientID.patient + \"/all\";\nmsg.url =  url_base + \"?time_start=\" + time_start + \"&time_end=\" + time_end;\nglobal.set(\"url\", url_base);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 780,
        "wires": [
            [
                "1644c0c9861b678e"
            ]
        ]
    },
    {
        "id": "9d01da79b6429d8a",
        "type": "ui_slider",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "label": "Time",
        "tooltip": "",
        "group": "fb60a767374c0b66",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "5",
        "max": "240",
        "step": "5",
        "className": "",
        "x": 70,
        "y": 1140,
        "wires": [
            [
                "235663aa37bdb33f",
                "17c23070bb3ece95"
            ]
        ]
    },
    {
        "id": "23f83b3662b05420",
        "type": "ui_text",
        "z": "f6f2187d.f17ca8",
        "group": "fb60a767374c0b66",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "You are visualizig",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 1000,
        "wires": []
    },
    {
        "id": "17a6b9d77c6a59af",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d6c0b8753d05c4cc",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "function 2",
        "func": "let minutes =  msg[\"payload\"]\nlet time_start = (Math.floor(Date.now() / 1000) - minutes*60) * 1000000000; \nlet time_end = Math.floor(Date.now() / 1000) * 1000000000;  \n\nvar url_base = global.get(\"url\")\nmsg.url =  url_base + \"?time_start=\" + time_start + \"&time_end=\" + time_end;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1140,
        "wires": [
            [
                "1644c0c9861b678e",
                "17a6b9d77c6a59af"
            ]
        ]
    },
    {
        "id": "235663aa37bdb33f",
        "type": "rbe",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 270,
        "y": 1180,
        "wires": [
            [
                "d6c0b8753d05c4cc"
            ]
        ]
    },
    {
        "id": "17c23070bb3ece95",
        "type": "python3-function",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "func": "minutes = msg[\"payload\"]\nhours = minutes//60\nmin = minutes % 60\nmsg[\"payload\"] = f\"Last {hours}h {min}m\"\nreturn msg\n\n",
        "outputs": 1,
        "x": 390,
        "y": 1080,
        "wires": [
            [
                "23f83b3662b05420"
            ]
        ]
    },
    {
        "id": "aa5ee07d38b53fb6",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 660,
        "wires": []
    },
    {
        "id": "f46ad0c0ded9c54c",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 1,
        "width": 5,
        "height": 1
    },
    {
        "id": "9d772adf5636f886",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 3,
        "width": 5,
        "height": 1
    },
    {
        "id": "fe4156a060776918",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "b8b9708d6dbeea6c",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "a591328bf3274e9a",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 7,
        "width": 5,
        "height": 1
    },
    {
        "id": "c99b66663f080bc9",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "5ba2dbe1d3b4e7b1",
        "type": "ui_spacer",
        "z": "f6f2187d.f17ca8",
        "name": "spacer",
        "group": "fb60a767374c0b66",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "fb60a767374c0b66",
        "type": "ui_group",
        "name": "PATIENT STATUS",
        "tab": "a46648a75df0237a",
        "order": 1,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a46648a75df0237a",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]